-- Step 1: Read the clipboard
set clipboardData to the clipboard as text

-- Step 2: Extract the URL from the clipboard data using regular expression
set linkRegex to "https?://.*"
set foundLinks to {}
set foundLinks to paragraphs of (do shell script "echo " & quoted form of clipboardData & " | grep -oE " & quoted form of linkRegex)

-- Check if there's at least one link found
if (count of foundLinks) > 0 then
	-- Step 3: Download the web page content
	set targetURL to item 1 of foundLinks -- Assuming we use the first link found
	set quotedURL to quoted form of targetURL
	set htmlSource to do shell script "curl " & quotedURL
	
	-- Step 4: Extract the product ID from the web page using regular expression
	set productIdRegex to "product_id\"\\s*:\\s*(\\d+)"
	set foundProductIds to paragraphs of (do shell script "echo " & quoted form of htmlSource & " | grep -oE " & quoted form of productIdRegex)
	
	-- Check if there's at least one product ID found
	if (count of foundProductIds) > 0 then
		-- Assuming we use the first product ID found
		set productId to item 1 of foundProductIds
		
		-- Step 5: Get product prices from the API
		set apiURL to "https://api.gog.com/products/" & productId & "/prices?countryCode=AR"
		set quotedAPIURL to quoted form of apiURL
		set jsonSource to do shell script "curl " & quotedAPIURL
		
		-- Step 6: Parse the JSON and extract finalPrice
		set finalPrice to do shell script "echo " & quoted form of jsonSource & " | /usr/bin/python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"finalPrice\"]'"
		set finalPrice to (finalPrice as number) / 100
		
		-- Step 7: Display the result
		display dialog "Game Title: Diablo" & return & "Price: " & finalPrice as text with icon note buttons {"OK"} default button "OK"
	else
		display dialog "No product ID found on the page." with icon caution buttons {"OK"} default button "OK"
	end if
else
	display dialog "No valid URL found in the clipboard." with icon caution buttons {"OK"} default button "OK"
end if
