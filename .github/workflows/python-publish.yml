name: Upload Python Package

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  get_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Get version from setup.py
        id: set_version
        run: |
          VERSION=$(python setup.py --version)
          echo "Version: $VERSION"
          echo "::set-output name=version::$VERSION" 

  create_release:
    runs-on: ubuntu-latest
    needs: get_version
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ needs.get_version.outputs.version }}
          release_name: Release v${{ needs.get_version.outputs.version }}
      - name: Copy app.py
        run: |
          cp gog_price_checker/__main__.py app.py
      - name: Upload app.py as an asset
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: app.py

  deploy:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
